/*
 *	获取内核态的EXPLORER结构的
 */
#ifndef _PROCESS_HANDLE_
#define _PROCESS_HANDLE_

// 获取PEB
BOOLEAN EPROCESS__PPEB(PEPROCESS pEproc, PPEB* pPeb);
BOOLEAN EPROCESS__ThreadListHead(PEPROCESS pEproc, PLIST_ENTRY* pThreadList);

// _PEB
BOOLEAN PEB__ImageBaseAddress(PPEB pPeb, PVOID* pBase);
BOOLEAN PEB__Ldr(PPEB pPeb, PVOID* pLdr /*PEB_LDR_DATA*/);
BOOLEAN PEB__ProcessParameters(PPEB pPeb, PVOID* pParam /*RTL_USER_PROCESS_PARAMETERS*/);

// _RTL_USER_PROCESS_PARAMETERS
BOOLEAN RTL_USER_PROCESS_PARAMETERS__DllPath(PVOID pParam, PUNICODE_STRING* pDllPath);
BOOLEAN RTL_USER_PROCESS_PARAMETERS__ImagePathName(PVOID pParam, PUNICODE_STRING* pPathName);
BOOLEAN RTL_USER_PROCESS_PARAMETERS__CommandLine(PVOID pParam, PUNICODE_STRING* pCommandLine);

// _PEB_LDR_DATA
BOOLEAN PEB_LDR_DATA__InLoadOrderModuleList(PVOID pLdr, PLIST_ENTRY* pEntry);
BOOLEAN CONTAINING_RECORD__LDR_DATA_TABLE(PVOID pInload, PVOID* pLdr/*LDR_DATA_TABLE_ENTRY*/);

// _LDR_DATA_TABLE_ENTRY
BOOLEAN LDR_DATA_TABLE_ENTRY__DllBase(PVOID pLdr, PVOID* pBase);
BOOLEAN LDR_DATA_TABLE_ENTRY__EntryPoint(PVOID pLdr, PVOID* pPoint);
BOOLEAN LDR_DATA_TABLE_ENTRY__SizeOfImage(PVOID pLdr, UINT32* pSize);
BOOLEAN LDR_DATA_TABLE_ENTRY__FullDllName(PVOID pLdr, PUNICODE_STRING* pFullName);
BOOLEAN LDR_DATA_TABLE_ENTRY__BaseDllName(PVOID pLdr, PUNICODE_STRING* pDllName);

// Module
PVOID	GetModuleBaseAddress(PEPROCESS pEproc, PUNICODE_STRING pDllName);

// _KTHREAD
BOOLEAN CONTAINING_RECORD__ETHREAD(PVOID pEntery, PETHREAD* pEThread);
BOOLEAN ETHREAD__Tcb(PETHREAD EThread, PKTHREAD* pTcb);
BOOLEAN KTHREAD__SuspendCount(PKTHREAD pTcb, PCHAR* pSuspendCount);
BOOLEAN KTHREAD__SuspendApc(PKTHREAD pTcb, PKAPC* pSuspendApc);

#endif //#ifndef _PROCESS_HANDLE_