// TestDriverDlg.cpp : 实现文件
//

#include "stdafx.h"
#include "TestDriver.h"
#include "TestDriverDlg.h"

#ifdef _DEBUG
#define new DEBUG_NEW
#endif


// CTestDriverDlg 对话框




CTestDriverDlg::CTestDriverDlg(CWnd* pParent /*=NULL*/)
	: CDialog(CTestDriverDlg::IDD, pParent)
{
	m_hIcon = AfxGetApp()->LoadIcon(IDR_MAINFRAME);
	m_timeout = 0;
}

void CTestDriverDlg::DoDataExchange(CDataExchange* pDX)
{
	CDialog::DoDataExchange(pDX);

	DDX_Text(pDX, IDC_ST_INFO, m_strInfo);
}

BEGIN_MESSAGE_MAP(CTestDriverDlg, CDialog)
	ON_WM_PAINT()
	ON_WM_QUERYDRAGICON()
	//}}AFX_MSG_MAP
	ON_WM_TIMER()
END_MESSAGE_MAP()


// CTestDriverDlg 消息处理程序

BOOL CTestDriverDlg::OnInitDialog()
{
	CDialog::OnInitDialog();

	SetForegroundWindow();
	// 设置此对话框的图标。当应用程序主窗口不是对话框时，框架将自动
	//  执行此操作
	SetIcon(m_hIcon, TRUE);			// 设置大图标
	SetIcon(m_hIcon, FALSE);		// 设置小图标

	// TODO: 在此添加额外的初始化代码
	SetTimer(1, 1000, NULL);
	m_timeout = 10;

	CString			strTimeout;

	strTimeout.Format(_T("%d秒钟后自动关闭窗口"), m_timeout);
	SetDlgItemText(IDC_ST_TIMEOUT, strTimeout.GetBuffer());

	return TRUE;  // 除非将焦点设置到控件，否则返回 TRUE
}

// 如果向对话框添加最小化按钮，则需要下面的代码
//  来绘制该图标。对于使用文档/视图模型的 MFC 应用程序，
//  这将由框架自动完成。

void CTestDriverDlg::OnPaint()
{
	if (IsIconic())
	{
		CPaintDC dc(this); // 用于绘制的设备上下文

		SendMessage(WM_ICONERASEBKGND, reinterpret_cast<WPARAM>(dc.GetSafeHdc()), 0);

		// 使图标在工作矩形中居中
		int cxIcon = GetSystemMetrics(SM_CXICON);
		int cyIcon = GetSystemMetrics(SM_CYICON);
		CRect rect;
		GetClientRect(&rect);
		int x = (rect.Width() - cxIcon + 1) / 2;
		int y = (rect.Height() - cyIcon + 1) / 2;

		// 绘制图标
		dc.DrawIcon(x, y, m_hIcon);
	}
	else
	{
		CDialog::OnPaint();
	}
}

//当用户拖动最小化窗口时系统调用此函数取得光标显示。
//
HCURSOR CTestDriverDlg::OnQueryDragIcon()
{
	return static_cast<HCURSOR>(m_hIcon);
}


void CTestDriverDlg::OnTimer(UINT_PTR nIDEvent)
{
	if(1 == nIDEvent)
	{
		CString			strTimeout;

		m_timeout--;
		if(m_timeout <= 0)
		{
			EndDialog(IDCANCEL);
		}
		else
		{
			strTimeout.Format(_T("%d秒钟后自动关闭窗口"), m_timeout);
			SetDlgItemText(IDC_ST_TIMEOUT, strTimeout.GetBuffer());
		}
	}

	CDialog::OnTimer(nIDEvent);
}
